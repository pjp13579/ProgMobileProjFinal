// Generated by view binder compiler. Do not edit!
package com.example.recycleviewpilot2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recycleviewpilot2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SocketsManagerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText hub;

  @NonNull
  public final Button sendToSocket;

  @NonNull
  public final Button subscribeHub;

  @NonNull
  public final EditText textToSocket;

  private SocketsManagerBinding(@NonNull ConstraintLayout rootView, @NonNull EditText hub,
      @NonNull Button sendToSocket, @NonNull Button subscribeHub, @NonNull EditText textToSocket) {
    this.rootView = rootView;
    this.hub = hub;
    this.sendToSocket = sendToSocket;
    this.subscribeHub = subscribeHub;
    this.textToSocket = textToSocket;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SocketsManagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SocketsManagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sockets_manager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SocketsManagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hub;
      EditText hub = ViewBindings.findChildViewById(rootView, id);
      if (hub == null) {
        break missingId;
      }

      id = R.id.sendToSocket;
      Button sendToSocket = ViewBindings.findChildViewById(rootView, id);
      if (sendToSocket == null) {
        break missingId;
      }

      id = R.id.subscribeHub;
      Button subscribeHub = ViewBindings.findChildViewById(rootView, id);
      if (subscribeHub == null) {
        break missingId;
      }

      id = R.id.textToSocket;
      EditText textToSocket = ViewBindings.findChildViewById(rootView, id);
      if (textToSocket == null) {
        break missingId;
      }

      return new SocketsManagerBinding((ConstraintLayout) rootView, hub, sendToSocket, subscribeHub,
          textToSocket);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
